# Site settings
course_name: Holistic Software Security
course_description: "The goal of the course is to bootstrap you into software security research. The
course provides a complete overview of different aspects of software security and
standard techniques used to solve various software security problems. We discuss
generic techniques such as Data flow analysis/ type inference/ dynamic analysis
that are also needed to perform research in other areas such as Software engineering
and program analysis.
The course is composed of four components: (i) Vulnerability Finding, (ii) Automated Patching, (iii) Patch Propagation, and (iv) Vulnerability Prevention.
<ul>
<li>Vulnerability Finding: We understand the basics of vulnerability finding techniques: Static analysis
(Pattern-based/ Dataflow based/ Type-based/DSL based), Dynamic Analysis (Different Flavors of Fuzzing
and dynamic symbolic execution), Machine Learning, and a combination of all the above.</li>

<li>Automated Patching: Automated Program repair techniques: Pattern-based/ Dynamic analysis based/ Machine learning etc.</li>

<li>Patch Propagation: Understanding the problem of propagating patches caused by software diversity
and potential solutions.</li>

<li>Vulnerability Prevention: Type-safe languages (Rust, Go, etc.), Retrofitting techniques (Sanitizers: ASAN, etc.),
Type-safe dialects (Checked C/Cyclone/etc.).</li>
</ul>

For every component, we will start with basics and cover the state-of-the-art techniques.
We will also be reading research papers and try to analyze the pros and cons critically."
evaluation: "
We will use the following distribution for grading:
<ul>
  <li>Four assignments (10% each).</li>
  <li>Paper presentation (10%).</li>
  <li>Paper Review (10%).</li>
  <li>Course Project (40%).</li>
</ul>
This is a project-heavy course with more than one-third of the grade depends on the successful
completion of the project.
"
course_project: "The goal of the course project is to enable students to experience various aspects of
software security research.  The result of the project will be a conference-style presentation.
This is a semester-long project and is recommended to be done in groups of up to three students.
Each project group is expected to decide milestones and will receive grades based on the satisfactory
completion of these milestones and the presentation. Potential project ideas are
<a href=\"https://docs.google.com/spreadsheets/d/1Tmm2GvXN-9Uo8grPoXuJoPQM2JYPeSCf8a16RkJmFkA/\">here</a>.
Although, students can pick a project of their choice after discussing it with the professor."

course_prereqs: "This is a hands-on graduate-level course, with most of the assignments involves writing C/C++ code.
I am expecting the students to have the following background:
<ul>
    <li>Should be very comfortable with writing C/C++ code: We will be working with clang/LLVM, which requires considerable experience with C/C++ codebases.</li>
    <li>Should be comfortable with operating system concepts, especially: Process Isolation, Memory Management (Virtual memory/Demand paging), Processor privilege levels (e.g., x86 Rings: 0-3).</li>
    <li>Knowledge about basic software security concepts such as buffer overflows, return-oriented programming, etc.</li>
</ul>"

learning_objectives: "This course is aimed at introducing students to various aspects of software security research.
After finishing the course, the students should:
<ul>
   <li>Have a good understanding of software security problems at various stages of software development and deployment.</li>
   <li>Have a good understanding of principles behind solving various software security problems.</li>
   <li>Have the ability to use state-of-the art tools to implement software security solutions.</li>
   <li>Have the ability to systematically solve system security problems.</li>
</ul>
"

course_policies: "This course will be run under the \"reasonable adults\" policy wherein it is assumed that all
students are reasonable adults that want to benefit the most of the course by attending the course regularly,
completing the homework assignments and projects on time, asking questions during the course and if they run
into problems, and checking back with the instructor and the TA (if there exists one) regularly to ensure good progress. <br/>

A more verbose version of the policy is available on <a href=\"https://spaf.cerias.purdue.edu/cpolicy.html\">Spaf's</a> page.
This course follows the policies listed on that page. If you have any question about the course policy,
don't hesitate to ask the instructor or the TA. <br/>

As a short summary: (i) you are expected to attend all classes (modulo good reasons),
(ii) you are supposed to hand in all work before the deadlines (there's a 10% point reduction per day for late hand-ins),
(iii) if you need special treatment or have special circumstances, talk to the instructor or TA (if there exists one). - Copied from Prof.Payers course."

course_semester: "Fall 2021"

baseurl: "/hss" # the subpath of your site, e.g. /blog/
url: "http://purs3lab.github.io/" # the base hostname & protocol for your site

schoolname: "Purdue University"
schoolurl: "https://engineering.purdue.edu/ECE"
twitter_username: machiry_msidc

address: |
    Elmore Family School of Electrical and Computer Engineering
    Purdue University
    West Lafayette, IN, USA

# Set your Google Analytics tracking ID (set up yours at http://www.google.com/analytics/)
google_analytics: UA-93239312-1

### Do not change the followings unless you know what you are doing ###

# Build settings
markdown: kramdown

# Other options
permalink: blog/:year/:month/:title
excerpt_separator: "<!--more-->"

include: ['_images', '_css']
exclude: ['develop']

dateformat: "%m/%d/%Y"

future: true
collections:
    events:
        output: true
    lectures:
        output: true
    lecschedule:
        output: true
    assignments:
        output: true
    announcements:
        output: false


defaults:
  - scope:
      path: ""
      type: "assignments"
    values:
      layout: "assignment"
